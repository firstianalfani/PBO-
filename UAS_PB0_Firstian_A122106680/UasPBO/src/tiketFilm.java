
    import javax.swing.*;
    import javax.swing.table.DefaultTableModel;
    import java.awt.event.MouseEvent;
    import java.awt.event.MouseListener;
    import java.sql.*;
    import java.util.HashSet;

    /**
     *
     * @author Firstian Alfani
     */
    public class tiketFilm extends javax.swing.JFrame {

        HashSet<String> kursi = new HashSet<String>();
        private ResultSet rs;
        String[] header = {"No Film", "Film","Jam","Kursi","Tagihan"};
        DefaultTableModel tabMode01;
        String id;


        /**
         * Creates new form tiketFilm
         */
        public tiketFilm() {
            initComponents();
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">
        private void initComponents() {

            btnA2 = new javax.swing.JToggleButton();
            btnA1 = new javax.swing.JToggleButton();
            btnB1 = new javax.swing.JToggleButton();
            btnB2 = new javax.swing.JToggleButton();
            label1 = new java.awt.Label();
            tghn = new java.awt.Label();
            label2 = new java.awt.Label();
            txtTagihan = new javax.swing.JTextField();
            label3 = new java.awt.Label();
            label4 = new java.awt.Label();
            label5 = new java.awt.Label();
            txtKursi = new javax.swing.JTextField();
            txtKursi.setEditable(false);
            txtFilm = new javax.swing.JComboBox<>();
            txtJam = new javax.swing.JComboBox<>();
            btnC2 = new javax.swing.JToggleButton();
            btnC1 = new javax.swing.JToggleButton();
            btnA4 = new javax.swing.JToggleButton();
            btnA3 = new javax.swing.JToggleButton();
            btnB3 = new javax.swing.JToggleButton();
            btnB4 = new javax.swing.JToggleButton();
            btnC4 = new javax.swing.JToggleButton();
            btnC3 = new javax.swing.JToggleButton();
            jScrollPane1 = new javax.swing.JScrollPane();
            jTable1 = new javax.swing.JTable();
            button2 = new java.awt.Button();
            button3 = new java.awt.Button();
            button4 = new java.awt.Button();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            btnA2.setText("A2");
            btnA2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnA2ActionPerformed(evt);
                }
            });

            btnA1.setText("A1");
            btnA1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnA1ActionPerformed(evt);
                }
            });

            btnB1.setText("B1");
            btnB1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnB1ActionPerformed(evt);
                }
            });

            btnB2.setText("B2");
            btnB2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnB2ActionPerformed(evt);
                }
            });

            label1.setText("Layar Bioskop");

            tghn.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
            tghn.setText("Tagihan");

            label2.setFont(new java.awt.Font("Swis721 Lt BT", 0, 14)); // NOI18N
            label2.setText("Rp");

            txtTagihan.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
            txtTagihan.setName(""); // NOI18N
            txtTagihan.setText("0");

            label3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
            label3.setText("Pilih Film");

            label4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
            label4.setText("Jam Tayang");

            label5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
            label5.setText("Nomer Kursi");

            txtFilm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Hidden Strike", "Elemental Forces of Nature", "Mission Impossible Dead Reckoning", "Insidious The Red Door", "Indiana Jones and The Dial Destiny " }));
            txtFilm.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    txtFilmActionPerformed(evt);
                }
            });

            txtJam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "11.30 ", "14.10 ", "18.30 ", "21.00 " }));

            btnC2.setText("C2");
            btnC2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnC2ActionPerformed(evt);
                }
            });

            btnC1.setText("C1");
            btnC1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnC1ActionPerformed(evt);
                }
            });

            btnA4.setText("A4");
            btnA4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnA4ActionPerformed(evt);
                }
            });

            btnA3.setText("A3");
            btnA3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnA3ActionPerformed(evt);
                }
            });

            btnB3.setText("B3");
            btnB3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnB3ActionPerformed(evt);
                }
            });

            btnB4.setText("B4");
            btnB4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnB4ActionPerformed(evt);
                }
            });

            btnC4.setText("C4");
            btnC4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnC4ActionPerformed(evt);
                }
            });

            btnC3.setText("C3");
            btnC3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnC3ActionPerformed(evt);
                }
            });

//            jTable1.setModel(new javax.swing.table.DefaultTableModel(
//                    new Object [][] {
//                            {null, null, null, null},
//                            {null, null, null, null},
//                            {null, null, null, null},
//                            {null, null, null, null}
//                    },
//                    new String [] {
//                            "Film", "Jam Tayang", "No Kursi", "Tagihan"
//                    }
//            ));

            tabMode01 = new DefaultTableModel(null,header);
            jTable1.setModel(tabMode01);

            jTable1.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    klikTabel(e);
                }

                @Override
                public void mousePressed(MouseEvent e) {

                }

                @Override
                public void mouseReleased(MouseEvent e) {

                }

                @Override
                public void mouseEntered(MouseEvent e) {

                }

                @Override
                public void mouseExited(MouseEvent e) {

                }
            });

            jScrollPane1.setViewportView(jTable1);

            ///buttonEdit
            button2.setLabel("Batal");
            button2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    button2ActionPerformed(evt);
                }
            });

            //buttonSimpan
            button3.setLabel("Simpan");
            button3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    button3ActionPerformed(evt);
                }
            });

            //buttonHapus
            button4.setLabel("Selesai");
            button4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    button4ActionPerformed(evt);
                }
            });


            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(txtJam, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                    .addGap(118, 118, 118)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                    .addComponent(btnC1)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(btnC2))
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(btnA1)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(btnA2))
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(btnB1)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(btnB2)))
                                                                    .addGap(69, 69, 69)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                    .addComponent(btnC3)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(btnC4))
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(btnA3)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(btnA4))
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(btnB3)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(btnB4))))
                                                            .addGroup(layout.createSequentialGroup()
                                                                    .addGap(216, 216, 216)
                                                                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                    .addGap(78, 78, 78)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(tghn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addComponent(txtFilm, 0, 269, Short.MAX_VALUE)
                                                                            .addComponent(txtKursi)
                                                                            .addComponent(txtTagihan)))))
                                            .addGroup(layout.createSequentialGroup()
                                                    .addGap(34, 34, 34)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addGap(101, 101, 101)))))
                                    .addContainerGap(36, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(17, 17, 17)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(btnA4)
                                                            .addComponent(btnA3))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(btnB3)
                                                            .addComponent(btnB4))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(btnC3)
                                                            .addComponent(btnC4)))
                                            .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(btnA2)
                                                            .addComponent(btnA1))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(btnB1)
                                                            .addComponent(btnB2))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(btnC1)
                                                            .addComponent(btnC2))))
                                    .addGap(19, 19, 19)
                                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(12, 12, 12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtJam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(11, 11, 11)
                                                    .addComponent(txtKursi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTagihan, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tghn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(19, 19, 19)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(32, Short.MAX_VALUE))
            );

            tampiltabel();
            settombol(1,0,1);
            pack();
        }// </editor-fold>


        //Use Toogle Button
        private void btnA1ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("A1");
                String teks = "";
                int j = 1; //Jika masukan hanya 1 maka var i "," tidak ikut
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("A1");
                String teks = "";
                int j = 1;
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            }
        }

        private void btnA2ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("A2");
                String teks = "";
                int j = 1;
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("A2");
                String teks = "";
                int j = 1;
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            }
        }

        private void btnA3ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("A3");
                String teks = "";
                int j = 1;
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("A3");
                String teks = "";
                int j = 1;
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            }
        }

        private void btnA4ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("A4");
                String teks = "";
                int j = 1;
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("A4");
                String teks = "";
                int j = 1;
                for (String i : kursi) {
                    if(j == 1){
                        teks = i;
                    }
                    else{
                        teks = teks + " ," + i;
                    }
                    j++;
                }
                txtKursi.setText(teks);
            }
        }

        private void btnB1ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("B1");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("B1");
                setKursi();
            }
        }

        private void btnB2ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("B2");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("B2");
                setKursi();
            }
        }

        private void btnC2ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("C2");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("C2");
                setKursi();
            }
        }

        private void btnC1ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("C1");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("C1");
                setKursi();
            }
        }

        private void btnB3ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("B3");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("B3");
                setKursi();
            }
        }

        private void btnB4ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("B4");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("B4");
                setKursi();
            }
        }

        private void btnC4ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("C4");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("C4");
                setKursi();
            }
        }

        private void btnC3ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            AbstractButton abstractButton =
                    (AbstractButton)evt.getSource();

            boolean selected = abstractButton.getModel().isSelected();
            if (selected) {
                int result = Integer.parseInt(txtTagihan.getText()) + 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.add("C3");
                setKursi();
            } else {
                int result = Integer.parseInt(txtTagihan.getText()) - 40000;
                txtTagihan.setText(String.valueOf(result));
                kursi.remove("C3");
                setKursi();
            }
        }

        //tombolSimpan
        private void button3ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            if (button3.getLabel() == "Simpan"){
                String xfilm = txtFilm.getSelectedItem().toString();
                String xjam = txtJam.getSelectedItem().toString();
                if (xfilm.equals("-")){
                    JOptionPane.showMessageDialog(this, "Film belum dipilih !");
                } else if (xjam.equals("-")){
                    JOptionPane.showMessageDialog(this, "Jam tayang belum dipilih !");
                } else {
                    simpan();
                    tampiltabel();
                    clear();
                }
            } else {
                String xfilm = txtFilm.getSelectedItem().toString();
                String xjam = txtJam.getSelectedItem().toString();
                if (xfilm.equals("-")){
                    JOptionPane.showMessageDialog(this, "Film belum dipilih !");
                } else if (xjam.equals("-")){
                    JOptionPane.showMessageDialog(this, "Jam tayang belum dipilih !");
                } else {
                    koreksi();
                    button3.setLabel("Simpan");
                    button4.setLabel("Selesai");
                    settombol(1,0,1);
                    tampiltabel();
                    clear();
                }
            }
        }

        //tombolEdit
        private void button2ActionPerformed(java.awt.event.ActionEvent evt) {
            button3.setLabel("Simpan");
            button4.setLabel("Selesai");
            settombol(1,0,1);
            tampiltabel();
            clear();
        }

        //tombolHapus
        private void button4ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            if (button4.getLabel() == "Selesai"){
                this.dispose();
                new menuTiket().setVisible(true); //pindah ke menu awal
            } else {
                hapus();
                button3.setLabel("Simpan");
                button4.setLabel("Selesai");
                settombol(1,0,1);
                tampiltabel();
                clear();
            }
        }
        private void txtFilmActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:

        }

        private void setKursi(){
            String teks = "";
            int j = 1;
            for (String i : kursi) {
                if(j == 1){
                    teks = i;
                }
                else{
                    teks = teks + " ," + i;
                }
                j++;
            }
            txtKursi.setText(teks);
        }

        private void hapus(){
            try
            {
                KoneksiDBMS CnPenjualan = new KoneksiDBMS();
                Connection con = CnPenjualan.BukaCn();
                Statement stat = con.createStatement();

                String strsql = "delete from film where nofilm='" + id+"' ";
                int stsproses = stat.executeUpdate(strsql);

                if (stsproses == 1)
                    JOptionPane.showMessageDialog(this, "Data Terhapus !");
                con.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(this, "Gagal Menghapus!!!");
                System.err.println("Kesalahan perintah SQL : " + e.getMessage());
            }
        }

        //Edit data
        private void koreksi() {
            try
            {
                KoneksiDBMS CnPenjualan = new KoneksiDBMS();
                Connection con = CnPenjualan.BukaCn();
                Statement stat = con.createStatement();

                String strsql = "update film set film='" + txtFilm.getSelectedItem()+
                        "',jam='" + txtJam.getSelectedItem()+
                        "',kursi='" + txtKursi.getText()+
                        "',tagihan='" + txtTagihan.getText()+
                        "' where nofilm='" + id +"' ";
                int stsproses = stat.executeUpdate(strsql);

                if (stsproses == 1)
                    JOptionPane.showMessageDialog(this, "Sukses DiEdit!");
                con.close();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(this, "Koreksi Gagal !");
                System.err.println("Kesalahan perintah SQL : " + e.getMessage());
            }
        }

        //saat klik tabel
        private void klikTabel(MouseEvent e){
            try
            {
                clear();
                String nofilm = String.valueOf(jTable1.getValueAt
                        (jTable1.getSelectedRow(),0));
                String vfilm = String.valueOf(jTable1.getValueAt
                        (jTable1.getSelectedRow(),1));
                String vjam = String.valueOf(jTable1.getValueAt
                        (jTable1.getSelectedRow(),2));
                String vkursi = String.valueOf(jTable1.getValueAt
                        (jTable1.getSelectedRow(),3));
                String vtagihan = String.valueOf(jTable1.getValueAt
                        (jTable1.getSelectedRow(),4));

                txtFilm.setSelectedItem(vfilm);
                txtJam.setSelectedItem(vjam);
                txtKursi.setText(vkursi);
                txtTagihan.setText(vtagihan);
                id = nofilm;

                setBtnKursi(vkursi);

                settombol(1, 1, 1);
                button3.setLabel("Edit");
                button4.setLabel("Hapus");

            }
            catch (Exception ex)
            {
                JOptionPane.showMessageDialog(this, "Ada Kesalahan !!!");
            }
        }

        private void setBtnKursi(String vkursi) {
            if (vkursi.contains("A1")){
                btnA1.setSelected(true);
                kursi.add("A1");
            }
            if (vkursi.contains("A2")){
                btnA2.setSelected(true);
                kursi.add("A2");
            }
            if (vkursi.contains("A3")){
                btnA3.setSelected(true);
                kursi.add("A3");
            }
            if (vkursi.contains("A4")){
                btnA4.setSelected(true);
                kursi.add("A4");
            }
            if (vkursi.contains("B1")){
                btnB1.setSelected(true);
                kursi.add("B1");
            }
            if (vkursi.contains("B2")){
                btnB2.setSelected(true);
                kursi.add("B2");
            }
            if (vkursi.contains("B3")){
                btnB3.setSelected(true);
                kursi.add("B3");
            }
            if (vkursi.contains("B4")){
                btnB4.setSelected(true);
                kursi.add("B4");
            }
            if (vkursi.contains("C1")){
                btnC1.setSelected(true);
                kursi.add("C1");
            }
            if (vkursi.contains("C2")){
                btnC2.setSelected(true);
                kursi.add("C2");
            }
            if (vkursi.contains("C3")){
                btnC3.setSelected(true);
                kursi.add("C3");
            }
            if (vkursi.contains("C4")){
                btnC4.setSelected(true);
                kursi.add("C4");
            }
        }

        private void simpan() {
            try {
                KoneksiDBMS CnPenjualan = new KoneksiDBMS();
                Connection con = CnPenjualan.BukaCn();
                Statement stat = con.createStatement();

                String strsql = "insert into film (film, jam, kursi, tagihan) values " +
                        " ('"+txtFilm.getSelectedItem() + "','"+txtJam.getSelectedItem() +"',"
                        + "'"+txtKursi.getText()+"','"+txtTagihan.getText()+"')";

                int stsproses = stat.executeUpdate(strsql);

                if (stsproses == 1)
                    JOptionPane.showMessageDialog(this, "Sukses Ditambahkan!!!");

                con.close();

            } catch (SQLException e){
                JOptionPane.showMessageDialog(this, "Penambahan Gagal!!!");
                System.err.println("Kesalahan perintah SQL : " + e.getMessage());
            }
        }

        void clear ()
        {
            txtTagihan.setText ("0");
            txtKursi.setText ("");
            txtJam.setSelectedItem ("-");
            txtFilm.setSelectedItem ("-");
            id="";
            kursi.clear();

            btnA1.setEnabled(true);
            btnA2.setEnabled(true);
            btnA3.setEnabled(true);
            btnA4.setEnabled(true);
            btnB1.setEnabled(true);
            btnB2.setEnabled(true);
            btnB3.setEnabled(true);
            btnB4.setEnabled(true);
            btnC1.setEnabled(true);
            btnC2.setEnabled(true);
            btnC3.setEnabled(true);
            btnC4.setEnabled(true);
            btnA1.setSelected(false);
            btnA2.setSelected(false);
            btnA3.setSelected(false);
            btnA4.setSelected(false);
            btnB1.setSelected(false);
            btnB2.setSelected(false);
            btnB3.setSelected(false);
            btnB4.setSelected(false);
            btnC1.setSelected(false);
            btnC2.setSelected(false);
            btnC3.setSelected(false);
            btnC4.setSelected(false);
        }

        void tampiltabel()
        {
            try {
                bersihtabel();
                KoneksiDBMS CnPenjualan = new KoneksiDBMS();
                Connection con = CnPenjualan.BukaCn();
                Statement stat = con.createStatement();

                String strsql = "select * from film";
                rs = stat.executeQuery(strsql);
                ResultSetMetaData meta = rs.getMetaData();

                rs.beforeFirst();
                while(rs.next()) {
                    String nofilm = rs.getString("nofilm");
                    String Film = rs.getString("film");
                    String Jam = rs.getString("jam");
                    String Kursi = rs.getString("kursi");
                    String Tagihan = rs.getString("tagihan");
                    String[] data = {nofilm, Film, Jam, Kursi, Tagihan};
                    tabMode01.addRow(data);
                }
                stat.close();
                rs.close();
                con.close();

            } catch (SQLException se) {
                System.err.println("Kesalahan perintah SQL : " + se.getMessage());
            }
        }

        void bersihtabel()
        {
            int brs = tabMode01.getRowCount();
            for(int i=0;i<brs;i++)
            {
                tabMode01.removeRow(0);
            }
        }

        void settombol(int a, int b, int c)
        {
            button3.setEnabled(a>=1 ? true: false);
            button2.setEnabled(b>=1 ? true: false);
            button4.setEnabled(c>=1 ? true: false);
        }

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(tiketFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(tiketFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(tiketFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(tiketFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new tiketFilm().setVisible(true);
                }
            });
        }


        // Variables declaration - do not modify
        private javax.swing.JToggleButton btnA1;
        private javax.swing.JToggleButton btnA2;
        private javax.swing.JToggleButton btnA3;
        private javax.swing.JToggleButton btnA4;
        private javax.swing.JToggleButton btnB1;
        private javax.swing.JToggleButton btnB2;
        private javax.swing.JToggleButton btnB3;
        private javax.swing.JToggleButton btnB4;
        private javax.swing.JToggleButton btnC1;
        private javax.swing.JToggleButton btnC2;
        private javax.swing.JToggleButton btnC3;
        private javax.swing.JToggleButton btnC4;
        private java.awt.Button button2;
        private java.awt.Button button3;
        private java.awt.Button button4;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTable jTable1;
        private java.awt.Label label1;
        private java.awt.Label label2;
        private java.awt.Label label3;
        private java.awt.Label label4;
        private java.awt.Label label5;
        private java.awt.Label tghn;
        private javax.swing.JComboBox<String> txtFilm;
        private javax.swing.JComboBox<String> txtJam;
        private javax.swing.JTextField txtKursi;
        private javax.swing.JTextField txtTagihan;
        // End of variables declaration
    }


